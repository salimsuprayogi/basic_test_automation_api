{
  "stats": {
    "suites": 5,
    "tests": 8,
    "passes": 8,
    "pending": 0,
    "failures": 0,
    "start": "2020-08-09T13:30:29.497Z",
    "end": "2020-08-09T13:30:41.451Z",
    "duration": 11954,
    "testsRegistered": 8,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "709c330c-0563-4731-8a6d-33d9e405e843",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "92f92bcc-c6c4-4cf4-a947-2aa396c939c4",
          "title": "@get single user",
          "fullFile": "C:\\api_test_js\\test\\1_api_single_get_test.js",
          "file": "\\test\\1_api_single_get_test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "@get it success get single user response",
              "fullTitle": "@get single user @get it success get single user response",
              "timedOut": false,
              "duration": 1007,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await api.getUser();\nconsole.log(response.body.data.email) // single user id 2, emailnya \nexpect(response.body.data.email).to.equal('janet.weaver@reqres.in')\nexpect(response.status).to.equal(200); // mencocokan data body dengan status response\n//selan dengan expect status, diusahakan menyertakan expext data yang diambilnya",
              "err": {},
              "uuid": "bb8975af-1f5d-4cc4-a584-ad92df30008e",
              "parentUUID": "92f92bcc-c6c4-4cf4-a947-2aa396c939c4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bb8975af-1f5d-4cc4-a584-ad92df30008e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1007,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "d1e8d1e9-5cb5-436b-976f-bf10b4d37d9e",
          "title": "@get user list",
          "fullFile": "C:\\api_test_js\\test\\2_api_get_test.js",
          "file": "\\test\\2_api_get_test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "@get it success get user list body response 1",
              "fullTitle": "@get user list @get it success get user list body response 1",
              "timedOut": false,
              "duration": 1987,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await api.getUserList();\nconsole.log(response.body) // return response dari body, data yang dikemballikan\nexpect(response.status).to.equal(200); // mencocokan data body dengan status response",
              "err": {},
              "uuid": "3cedfe84-d0dd-455e-aba9-a095afa71bf1",
              "parentUUID": "d1e8d1e9-5cb5-436b-976f-bf10b4d37d9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get it success get user list status response 2",
              "fullTitle": "@get user list @get it success get user list status response 2",
              "timedOut": false,
              "duration": 2396,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await api.getUserList();\nexpect(response.status).to.equal(200); // dibuat failed, asalnya return code 200",
              "err": {},
              "uuid": "b1573f44-3001-4bd2-b168-6635b8fc5831",
              "parentUUID": "d1e8d1e9-5cb5-436b-976f-bf10b4d37d9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get it success get user list total body response 3",
              "fullTitle": "@get user list @get it success get user list total body response 3",
              "timedOut": false,
              "duration": 842,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await api.getUserList();\nconsole.log(response.body.total)\nexpect(response.body.total).to.equal(12)\n// untuk mencocokan jumlah total data di dalam body",
              "err": {},
              "uuid": "5fccbc9b-7354-4fc5-98a4-ac47608787c1",
              "parentUUID": "d1e8d1e9-5cb5-436b-976f-bf10b4d37d9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get it success get user list email pertama response 4",
              "fullTitle": "@get user list @get it success get user list email pertama response 4",
              "timedOut": false,
              "duration": 922,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await api.getUserList();\nconsole.log(response.body.data[0].email)\nexpect(response.body.data[0].email).to.equal('george.bluth@reqres.in')\n// untuk mencocokan response email dengan data email di dalam objek array",
              "err": {},
              "uuid": "52926bc1-2d9a-4d79-90d7-60d7213d1977",
              "parentUUID": "d1e8d1e9-5cb5-436b-976f-bf10b4d37d9e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3cedfe84-d0dd-455e-aba9-a095afa71bf1",
            "b1573f44-3001-4bd2-b168-6635b8fc5831",
            "5fccbc9b-7354-4fc5-98a4-ac47608787c1",
            "52926bc1-2d9a-4d79-90d7-60d7213d1977"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6147,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "02baddec-2ca1-44a6-a50d-c0bcacfbfd19",
          "title": "@post user data",
          "fullFile": "C:\\api_test_js\\test\\3_api_post_test.js",
          "file": "\\test\\3_api_post_test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "@post it success post data",
              "fullTitle": "@post user data @post it success post data",
              "timedOut": false,
              "duration": 1109,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await api.postUser(postDataBody); // butuh parameter disini\nexpect(response.status).to.equal(201);",
              "err": {},
              "uuid": "91699fdc-649e-4d0d-996b-c4acfc96c4cf",
              "parentUUID": "02baddec-2ca1-44a6-a50d-c0bcacfbfd19",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "91699fdc-649e-4d0d-996b-c4acfc96c4cf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1109,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "de01b6da-1fa4-41e4-a3c5-7156727a48b8",
          "title": "@put user data",
          "fullFile": "C:\\api_test_js\\test\\4_api_put_test.js",
          "file": "\\test\\4_api_put_test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "@put it success put data",
              "fullTitle": "@put user data @put it success put data",
              "timedOut": false,
              "duration": 2428,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await api.putUser(putDataBody); // butuh parameter disini\nconsole.log(response.body)\nconsole.log(response.body.name)\nexpect(response.body.name).to.equal(putDataBody.name) // \"randara\"\nexpect(response.status).to.equal(200); // response status",
              "err": {},
              "uuid": "2bcc8acd-6cf2-405c-90b4-1378ba587a67",
              "parentUUID": "de01b6da-1fa4-41e4-a3c5-7156727a48b8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2bcc8acd-6cf2-405c-90b4-1378ba587a67"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2428,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7dec2710-9dec-486f-a9dc-78414f235086",
          "title": "@delete user data",
          "fullFile": "C:\\api_test_js\\test\\5_api_put_test.js",
          "file": "\\test\\5_api_put_test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "@delete it success delete data",
              "fullTitle": "@delete user data @delete it success delete data",
              "timedOut": false,
              "duration": 1159,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await api.deleteUser(); // tidak butuh parameter\nconsole.log(response.body)\nexpect(response.status).to.equal(204); // response status",
              "err": {},
              "uuid": "d412832a-dbba-4c91-b5ee-34da82031b3f",
              "parentUUID": "7dec2710-9dec-486f-a9dc-78414f235086",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d412832a-dbba-4c91-b5ee-34da82031b3f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1159,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.1.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": {
        "reportDir": "reports/mochawesome/"
      },
      "version": "5.1.0"
    }
  }
}